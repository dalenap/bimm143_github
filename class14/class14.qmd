---
title: "Class 14: RNASeq mini-project"
author: "Dalena (PID: A17327787)"
format: pdf
toc: TRUE
---

Here we will perform a complete RNASeq analysis from counts to pathways and biological interpretation.

The data for for hands-on session comes from GEO entry: GSE37704, which is associated with the following publication:

- Trapnell C, Hendrickson DG, Sauvageau M, Goff L et al. "Differential analysis of gene regulation at transcript resolution with RNA-seq". Nat Biotechnol 2013 Jan;31(1):46-53. PMID: 23222703

The authors report on differential analysis of lung fibroblasts in response to loss of the developmental transcription factor HOXA1. 

# Required packages

```{r, message=FALSE}
library(DESeq2)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(pathview)
library(gage)
library(gageData)
```

# Data import

```{r}
colData <- read.csv("GSE37704_metadata.csv",row.names=1)
countData <- read.csv("GSE37704_featurecounts.csv",row.names=1)
```

```{r}
head(colData)
```

```{r}
head(countData)
```
# Tidy the metadata

Check the correspondance of colData row and countData columns

```{r}
rownames(colData)
```

```{r}
colnames(countData)

## cannot just match due to "length" must remove or else returns false data
```
Remove the troublesome first column so we match the metadata

```{r}
counts <- countData[,-1]
```

```{r}
all(rownames(colData)==colnames(counts))
```

# Remove zero count genes

We will have rows in `counts` for genes that we can not say anything about because they have zero expression in the particular tissue we are looking at.

```{r}
head(counts)
```

If the `rowSums()` is zero than a given gene (i.e. row) has no count data and we should exlude these genes from further consideration

```{r}
to.keep <-rowSums(counts) !=0
cleancounts <- counts[to.keep,]
```

>Q. How many genes do we have left?

```{r}
nrow(cleancounts)
```


#Setup DEQSeq object for analysis

```{r}
dds <- DESeqDataSetFromMatrix(countData=cleancounts,
                              colData=colData,
                              design=~condition)
```

#Run DeSeq analysis

```{r}
dds <-DESeq(dds)
```

#Extract the results

```{r}
res <-results(dds)
head(res)
```

# Add Gene Annotation

```{r}
res$symbol<- mapIds(x=org.Hs.eg.db,
             keys=rownames(res),
             keytype="ENSEMBL",
             column="SYMBOL")

res$name<- mapIds(x=org.Hs.eg.db,
             keys=rownames(res),
             keytype="ENSEMBL",
             column="GENENAME")

res$entrez<- mapIds(x=org.Hs.eg.db,
             keys=rownames(res),
             keytype="ENSEMBL",
             column="ENTREZID")
```

# Save my results to a CSV file

```{r}
write.csv(res, file="results.csv")
```

# Result Visualization

```{r}
mycols <-rep("gray",nrow(res))
mycols[res$log2FoldChange <= -2] <-"dodgerblue3"
mycols[res$log2FoldChange>=2] <- "dodgerblue3"
mycols[res$padj >=0.05] <- "gray"

# make the plot
plot(res$log2FoldChange,-log(res$padj),col=mycols)

# adds the guidelines
abline(v=-2,col="orchid",lty=2,lwd=2)
abline(v=2, col="orchid",lty=2,lwd=2)
abline(h=-log(0.05),col="orchid",lty=2,lwd=2)
```
```{r}
library(ggplot2)
library(ggrepel)

ggplot(as.data.frame(res))+
  aes(log2FoldChange,-log(padj),label=name)+
  geom_text_repel(max.overlaps=)+
  geom_point(col=mycols)+
  geom_vline(xintercept=2,
             col="red",
             linetype="dotted",
             size=0.8)+
  geom_vline(xintercept=-2,
             col="red",
             linetype="dotted",
             size=0.8)+
  geom_hline(yintercept=-log(0.05),
             col="red",
             linetype="dotted",
             size=0.8)+
  theme_bw()+
  labs(title="Log2FC vs P-value", 
       x= "Log2(Fold Change)", 
       y="p-Value")
```

#Pathway Analysis

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

Run gage pathway analysis

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
attributes(keggres)

head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```
## Plots for Top 5 (Up Regulated) Pathways

```{r}
keggresgreater <- rownames(keggres$greater)[1:5]
keggresids = substr(keggresgreater, start=1, stop=8)
keggresids
```


```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

## Plots for Top 5 (Down-Regulated) Pathways

```{r}
keggresless <- rownames(keggres$less)[1:5]
keggreslessids = substr(keggresless, start=1, stop=8)
keggreslessids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggreslessids, species="hsa")
```

# Gene Ontology

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```
# Reactome Analysis

Let's now conduct over-representation enrichment analysis and pathway-topology analysis with Reactome using the previous list of significant genes generated from our differential expression results above.

First, Using R, output the list of significant genes at the 0.05 level as a plain text file:

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

Then, to perform pathway analysis online go to the Reactome website (https://reactome.org/PathwayBrowser/#TOOL=AT). Select “choose file” to upload your significant gene list. Then, select the parameters “Project to Humans”, then click “Analyze”.

![](R-HSA-69278.png)
